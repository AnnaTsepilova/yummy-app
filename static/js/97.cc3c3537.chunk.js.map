{"version":3,"file":"static/js/97.cc3c3537.chunk.js","mappings":"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","sources":["components/RecipePageHero/RecipePageHero.styled.js","components/RecipePageHero/RecipeHeroTextAdd/RecipeHeroTextAdd.styled.js","components/RecipePageHero/RecipeHeroTextAdd/ButtonLoader/ButtonLoader.jsx","components/RecipePageHero/RecipeHeroTextAdd/RecipeHeroTextAdd.jsx","components/RecipeInngredientsList/RecipeInngredientsList.styled.js","components/RecipeInngredientsList/CheckBox/CheckBox.styled.js","components/RecipeInngredientsList/CheckBox/CheckBox.jsx","components/RecipeInngredientsList/RecipeInngredientsList.jsx","components/RecipePreparation/RecipePreparation.styled.js","components/RecipePreparation/RecipePreparation.jsx","components/RecipePageHero/RecipePageHero.jsx","pages/RecipePage/RecipePage.jsx","redux/userRecipes/userRecipesSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport imgBg1x from 'images/Recipe/recipie-bgd-desc@1x.png';\nimport imgBg2x from 'images/Recipe/recipie-bgd-desc@2x.png';\n\nexport const RecipeBcg = styled.div`\n  width: 1440px;\n  height: 493px;\n  position: absolute;\n  top: 0%;\n  left: 5%;\n\n  width: 100%;\n  /* width: 1440px;\n  height: 455px; */\n  /* position: relative; */\n  /* background-position: center center; */\n  margin: 0 auto;\n  z-index: -5;\n  background-position: -220px -150px;\n\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-image: url(${imgBg1x});\n\n  @media screen and (min-width: 768px) {\n    /* .HeroBackground {\n      top: -68px;\n    } */\n  }\n\n  @media screen and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${imgBg2x});\n  }\n`;\n","import styled from 'styled-components';\nimport backgroundDesktop from 'images/Recipe/recipie-bgd-desc@1x.png';\nimport backgroundMobile from 'images/Recipe/recipie-bgd-mob@1x.png';\nimport backgroundTablet from 'images/Recipe/recipie-bgd-tab@1x.png';\n\nexport const ImgBox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -2;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  background-position: center center;\n  width: 100%;\n  height: 455px;\n\n  background-image: url(${backgroundMobile});\n  @media screen and (min-width: 768px) {\n    height: 495px;\n    background-image: url(${backgroundTablet});\n  }\n  @media screen and (min-width: 1440px) {\n    height: 493px;\n    background-image: url(${backgroundDesktop});\n  }\n`;\n\nexport const MainPageTitle = styled.h1`\n  position: relative;\n  z-index: 3;\n\n  padding-top: 30px;\n  color: var(--primary-green);\n  text-align: center;\n  font-size: 24px;\n  line-height: 1;\n\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: 44px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 44px;\n  }\n`;\n\nexport const Text = styled.p`\n  position: relative;\n  z-index: 3;\n\n  width: 100%;\n  max-width: 656px;\n  margin: 0 auto;\n  margin-top: 18px;\n  color: var(--secondary-black);\n  font-size: 12px;\n  line-height: 1.33;\n  text-align: center;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-top: 24px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  z-index: 3;\n\n  min-width: 200px;\n  margin-top: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 35px;\n  font-size: 10px;\n  line-height: 1.5;\n  display: block;\n  background-color: transparent;\n  padding: 0 18px;\n  border-radius: 24px 44px;\n  border: 1px solid #8baa36;\n\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    height: 59px;\n    font-size: 16px;\n    line-height: 1.5;\n    padding: 0 44px;\n  }\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  z-index: 3;\n\n  margin-top: 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const ClockSvg = styled.img`\n  width: 18px;\n  height: 18px;\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\nexport const Time = styled.span`\n  margin-left: 5px;\n   color: var(--secondary-black);\n  font-weight:  500;\n font-size: 14px;\n  line-height: 1.43\n  letter-spacing: -0.24px;\n\n`;\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst ButtonLoader = ({ color, width }) => {\n  return (\n    <RotatingLines\n      strokeColor={color}\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width={width}\n      visible={true}\n    />\n  );\n};\n\nexport default ButtonLoader;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFavoriteRecipes,\n  selectIsLoading,\n  selectRecipe,\n} from 'redux/userRecipes/userRecipesSelectors';\nimport {\n  MainPageTitle,\n  Text,\n  Button,\n  Box,\n  Time,\n  ClockSvg,\n} from './RecipeHeroTextAdd.styled';\nimport {\n  addRecipeToFavorite,\n  getFavoriteRecipes,\n  removeRecipeFromFavorite,\n} from 'redux/userRecipes/userResipesOperations';\nimport { useEffect } from 'react';\nimport ButtonLoader from './ButtonLoader/ButtonLoader';\nimport ClockIconPng from 'images/Recipe/clock.png';\n\nconst RecipeHeroTextAdd = ({ title, description, time, id }) => {\n  const recipe = useSelector(selectRecipe); // eslint-disable-line\n\n  const userFavouritesRecipes = useSelector(selectFavoriteRecipes);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  useEffect(() => {\n    // setIsFavorite(userFavouritesRecipes.includes(id));\n    dispatch(getFavoriteRecipes());\n  }, [dispatch]);\n  const func = () => {\n    const check = userFavouritesRecipes.filter(item => item._id === recipe._id);\n    if (check.length > 0) {\n      return true;\n    }\n    return false;\n  };\n  const handleFavoriteButton = id => {\n    const check = func();\n    if (check) {\n      return dispatch(removeRecipeFromFavorite(id));\n    }\n    return dispatch(addRecipeToFavorite(id));\n  };\n\n  return (\n    // <div>\n    //   <h1>{title}</h1>\n    //   <p>{description}</p>\n    //   <button>knopka</button>\n    // </div>\n    <>\n      <MainPageTitle>{title}</MainPageTitle>\n      <Text>{description}</Text>\n      <Button\n        disabled={isLoading}\n        whileHover={{\n          backgroundColor: '#8BAA36',\n          borderColor: '#8BAA36',\n        }}\n        onClick={() => handleFavoriteButton(recipe._id)}\n      >\n        {isLoading ? (\n          <ButtonLoader color=\"white\" width={25} />\n        ) : func() ? (\n          'Remove from favorite recipes'\n        ) : (\n          'Add to favorite recipes'\n        )}\n      </Button>\n      <Box>\n        <ClockSvg src={ClockIconPng} alt=\"Clock\" />\n        <Time>{time} min</Time>\n      </Box>\n    </>\n  );\n};\n\nexport default RecipeHeroTextAdd;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin-top: 144px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 80px;\n  }\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItemHeader = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px 10px;\n  width: 100%;\n  height: 38px;\n  max-width: 1240px;\n\n  background-color: var(--primary-green);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 17px 40px;\n  }\n`;\n\nexport const ListHeaderText = styled.span`\n  color: var(--primary-white);\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.5;\n  :last-child {\n    margin-left: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-left: 78px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      margin-left: 142px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  letter-spacing: 0.03em;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14.5px 29px 14px 14px;\n\n  background: #ebf3d4;\n  border-radius: 8px;\n  :nth-of-type(2) {\n    margin-top: 24px;\n    @media screen and (min-width: 768px) {\n      margin-top: 32px;\n    }\n  }\n\n  margin-top: 16px;\n  border-bottom: 1px solid #e0e0e0;\n\n  @media screen and (min-width: 768px) {\n    padding: 33px 58px 33px 40px;\n    margin-top: 24px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  width: 57px;\n  height: 57px;\n\n  @media screen and (min-width: 768px) {\n    width: 112px;\n    height: 112px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-left: 10px;\n\n  font-size: 16px;\n  line-height: 24px;\n\n  font-size: 12px;\n  line-height: 1.2;\n  font-weight: 500;\n\n  color: var(--primary-gray);\n\n  @media screen and (min-width: 768px) {\n    margin-left: 16px;\n    font-size: 16px;\n  }\n`;\n\nexport const Measure = styled.span`\n  color: var(--primary-white);\n  padding: 4px 10px;\n\n  background-color: var(--primary-green);\n  border-radius: 4px;\n\n  font-size: 12px;\n  line-height: 1.2;\n  font-weight: 600;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  margin-left: 46px;\n\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 110px;\n  }\n`;\n","import styled from 'styled-components';\nimport CheckIcon from 'images/Recipe/pick-big.png';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n  margin-left: 28px;\n  cursor: pointer;\n\n  border: 2px solid rgba(126, 126, 126, 0.5);\n  border-radius: 4px;\n\n  @media screen and (min-width: 768px) {\n    width: 35px;\n    height: 35px;\n    margin-left: 78px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 35px;\n    height: 35px;\n    margin-left: 151px;\n  }\n`;\n\nexport const SvgCheck = styled(CheckIcon)`\n  width: 8.7px;\n  height: 8.7px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 17px;\n    height: 17px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n// import { deleteIngredient, updateShoppinList } from 'redux/shopping/operations';\nimport { Box } from './CheckBox.styled';\nimport {\n  selectShoppingList,\n} from 'redux/userRecipes/userRecipesSelectors';\nimport { addUserShoppingList, removeFromShoppingList } from 'redux/userRecipes/userResipesOperations'; // eslint-disable-line\n\nconst CustomCheckbox = ({ recipeId, ingredientId, measure, isChecked }) => {\n  const dispatch = useDispatch(); // eslint-disable-line\n  const shoppingList = useSelector(selectShoppingList);\n  const check = () => {\n    const recipesId = shoppingList\n      .filter(item => item.id.toString() === ingredientId)\n      .flatMap(item => item.recipesId);\n    if (recipesId.includes(recipeId)) {\n      return true;\n    }\n    return false;\n  }\n\n  const handleChange = () => {\n    const checked = check();\n    if (checked) {\n      const arr = [];\n      const reqObj = {};\n      reqObj['measure'] = measure;\n      reqObj['ingredientId'] = ingredientId;\n      arr.push(reqObj, recipeId);\n      return dispatch(removeFromShoppingList(arr));\n    }\n    const arr = [];\n    const reqObj = {};\n    reqObj[ingredientId] = measure;\n    arr.push(reqObj, recipeId);\n    return dispatch(addUserShoppingList(arr));\n  };\n  return <Box onClick={handleChange}>{check() && <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M13.8928 0.746184C14.4196 -0.0309226 15.4767 -0.233794 16.2538 0.293059C17.0309 0.819911 17.2338 1.87698 16.7069 2.65409L7.48678 16.2538C6.81241 17.2485 5.34699 17.2485 4.67262 16.2538L0.293059 9.79396C-0.233794 9.01686 -0.0309226 7.95979 0.746184 7.43294C1.52329 6.90608 2.58036 7.10896 3.10721 7.88606L6.0797 12.2705L13.8928 0.746184Z\" fill=\"#8BAA36\" />\n  </svg>}</Box>;\n};\n\nexport default CustomCheckbox;\n","import React from 'react';\nimport {\n  Box,\n  List,\n  ListItemHeader,\n  ListHeaderText,\n  ListItem,\n  Wrapper,\n  ButtonWrapper,\n  Measure,\n  Img,\n  Title,\n} from './RecipeInngredientsList.styled';\nimport { useSelector } from 'react-redux';\nimport CustomCheckbox from './CheckBox/CheckBox';\nimport { selectRecipe } from 'redux/userRecipes/userRecipesSelectors';\n\nconst RecipeInngredientsList = ({ ingredients, recipeId }) => {\n  const list = useSelector(selectRecipe); // eslint-disable-line\n\n  return (\n    <Box>\n      <List>\n        <ListItemHeader>\n          <ListHeaderText>Product</ListHeaderText>\n          <div>\n            <ListHeaderText>Number</ListHeaderText>\n            <ListHeaderText>Add to list</ListHeaderText>\n          </div>\n        </ListItemHeader>\n        {ingredients?.map(({ _id, ttl, desc, thb, measure }) => {\n          const isChecked = ingredients?.some(item => item._id === _id); // eslint-disable-line\n          if (!_id) {\n            return null;\n          }\n          return (\n            <ListItem key={_id}>\n              <Wrapper>\n                <Img alt={ttl} src={thb} width={48} height={48} />\n                <Title>{ttl}</Title>\n              </Wrapper>\n              <ButtonWrapper>\n                <Measure>{measure}</Measure>\n                <CustomCheckbox\n                  recipeId={recipeId}\n                  ingredientId={_id}\n                  measure={measure}\n                  isChecked={isChecked}\n                />\n              </ButtonWrapper>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default RecipeInngredientsList;\n","import styled from 'styled-components';\n\nexport const MainBox = styled.div`\n  @media screen and (max-width: 1439.98px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 50px;\n\n  font-size: 24px;\n  line-height: 1;\n\n  letter-spacing: -0.24px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 96px;\n  }\n`;\n\nexport const Text = styled.p`\nmargin-left: 14px;\n  color: rgba(0, 0, 0, 0.8);\n font-size: 12px\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n  max-width: 558px;\n`;\n\nexport const Box = styled.div`\n  margin-top: 28px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n\n  :not(:first-child) {\n    margin-top: 14px;\n  }\n`;\n\nexport const SpanBox = styled.div`\n  color: white;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: var(--primary-green);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Span = styled.span`\n  padding: 8px;\n  font-weight: 600\n  font-size: 12px\n  line-height: 1.3;\n`;\n\nexport const Img = styled.img`\n  @media screen and (max-width: 1439.98px) {\n    margin-top: 40px;\n  }\n\n  width: 343px;\n  height: 250px;\n  @media screen and (min-width: 768px) {\n    width: 433px;\n    height: 332px;\n  }\n`;\n","import React from 'react';\nimport {\n  MainBox,\n  Title,\n  Box,\n  List,\n  Item,\n  SpanBox,\n  Span,\n  Text,\n  Img,\n} from './RecipePreparation.styled';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst RecipePreparation = ({ preview, title, instructions }) => {\n  const cleanedInstructions = instructions?.replace(/^\\d+\\)\\s*/gm, '');\n  const sentences = cleanedInstructions?.split(/(?:\\.|\\?|!)\\s/g);\n  const steps = sentences?.map(sentence =>\n    sentence.replace(/^\\d+\\)/, '').trim()\n  );\n\n  return (\n    <MainBox>\n      <Title>Recipe Preparation</Title>\n      <Box>\n        <List>\n          {steps?.map((el, idx) => (\n            <Item key={nanoid()}>\n              <SpanBox>\n                <Span>{idx + 1}</Span>\n              </SpanBox>\n              <Text>{el}</Text>\n            </Item>\n          ))}\n        </List>\n        <Img alt={title} src={preview} width={343} />\n      </Box>\n    </MainBox>\n  );\n};\n\nexport default RecipePreparation;\n","import React, { useEffect } from 'react';\nimport { RecipeBcg } from './RecipePageHero.styled';\nimport { createPortal } from 'react-dom';\nimport RecipeHeroTextAdd from './RecipeHeroTextAdd/RecipeHeroTextAdd';\nimport { useDispatch, useSelector } from 'react-redux';\n// import {\n//   selectIsLoading,\n//   selectRecipe,\n// } from 'redux/userRecipes/userRecipesSelectors';\n// import { getRecipeByIdAPI, getShoppingList } from 'service/API/dishesApi';\nimport RecipeInngredientsList from 'components/RecipeInngredientsList/RecipeInngredientsList';\nimport RecipePreparation from 'components/RecipePreparation/RecipePreparation';\nimport {\n  getRecipeById,\n  getUserShoppingList,\n} from 'redux/userRecipes/userResipesOperations';\nimport { useLocation } from 'react-router';\nimport { selectRecipe } from 'redux/userRecipes/userRecipesSelectors';\n\nconst mainRoot = document.querySelector('#racipe_bcg');\n\nconst RecipeBckg = () => {\n  return createPortal(<RecipeBcg></RecipeBcg>, mainRoot);\n};\n\nconst RecipePageHero = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const id = pathname.split('/')[2];\n  const recipe = useSelector(selectRecipe);\n  const ingredients = recipe.ingredients;\n\n  // const { title, description, time } = useSelector(selectRecipe);\n\n  useEffect(() => {\n    dispatch(getUserShoppingList());\n    dispatch(getRecipeById(id));\n  }, [dispatch, id]);\n\n  return (\n    <>\n      <RecipeBckg></RecipeBckg>\n      <RecipeHeroTextAdd\n        title={recipe.title}\n        description={recipe.description}\n        time={recipe.time}\n        id={recipe.id}\n      />\n      <RecipeInngredientsList ingredients={ingredients} recipeId={id} />\n      <RecipePreparation\n        preview={recipe.preview}\n        title={recipe.title}\n        instructions={recipe.instructions}\n      />\n    </>\n  );\n};\n\nexport default RecipePageHero;\n","import RecipePageHero from 'components/RecipePageHero/RecipePageHero';\nimport React from 'react';\n\nconst RecipePage = () => {\n  return (\n    <div>\n      <RecipePageHero />\n    </div>\n  );\n};\n\nexport default RecipePage;\n","export const selectFavoriteRecipes = state => state.userRecipes.favorite;\n\nexport const selectMyRecipes = state => state.userRecipes.myRecipes;\n\nexport const selectIsLoading = state => state.userRecipes.isLoading;\n\nexport const selectUserError = state => state.userRecipes.error;\n\nexport const selectShoppingList = state => state.userRecipes.shoppingList;\n\nexport const selectRecipe = state => state.userRecipes.recipeById;\n"],"names":["RecipeBcg","styled","_templateObject","_taggedTemplateLiteral","imgBg1x","imgBg2x","MainPageTitle","backgroundMobile","backgroundTablet","backgroundDesktop","_templateObject2","Text","_templateObject3","Button","_templateObject4","Box","_templateObject5","ClockSvg","_templateObject6","Time","_templateObject7","_ref","color","width","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","title","description","time","recipe","id","useSelector","selectRecipe","userFavouritesRecipes","selectFavoriteRecipes","dispatch","useDispatch","isLoading","selectIsLoading","useEffect","getFavoriteRecipes","func","filter","item","_id","length","_jsxs","_Fragment","children","disabled","whileHover","backgroundColor","borderColor","onClick","check","removeRecipeFromFavorite","addRecipeToFavorite","handleFavoriteButton","ButtonLoader","src","alt","List","ListItemHeader","ListHeaderText","ListItem","Wrapper","Img","Title","_templateObject8","Measure","_templateObject9","ButtonWrapper","_templateObject10","_templateObject11","recipeId","ingredientId","measure","isChecked","shoppingList","selectShoppingList","toString","flatMap","recipesId","includes","arr","reqObj","push","removeFromShoppingList","addUserShoppingList","height","viewBox","fill","xmlns","d","ingredients","map","_ref2","ttl","thb","desc","some","CustomCheckbox","MainBox","Item","SpanBox","Span","preview","instructions","cleanedInstructions","replace","sentences","split","steps","sentence","trim","el","idx","nanoid","mainRoot","document","querySelector","RecipeBckg","createPortal","useLocation","pathname","getUserShoppingList","getRecipeById","RecipeHeroTextAdd","RecipeInngredientsList","RecipePreparation","RecipePageHero","state","userRecipes","favorite","selectMyRecipes","myRecipes","selectUserError","error","recipeById"],"sourceRoot":""}
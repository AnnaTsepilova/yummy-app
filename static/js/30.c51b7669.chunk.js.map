{"version":3,"file":"static/js/30.c51b7669.chunk.js","mappings":"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","sources":["components/RecipePageHero/RecipePageHero.styled.js","components/RecipePageHero/RecipeHeroTextAdd/RecipeHeroTextAdd.styled.js","components/RecipePageHero/RecipeHeroTextAdd/ButtonLoader/ButtonLoader.jsx","components/RecipePageHero/RecipeHeroTextAdd/RecipeHeroTextAdd.jsx","components/RecipeInngredientsList/RecipeInngredientsList.styled.js","components/RecipeInngredientsList/CheckBox/CheckBox.styled.js","components/RecipeInngredientsList/CheckBox/CheckBox.jsx","components/RecipeInngredientsList/RecipeInngredientsList.jsx","components/RecipePreparation/RecipePreparation.styled.js","components/RecipePreparation/RecipePreparation.jsx","components/RecipePageHero/RecipePageHero.jsx","pages/RecipePage/RecipePage.jsx","redux/userRecipes/userRecipesSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport imgBg1x from 'images/Recipe/recipie-bgd-desc@1x.png';\nimport imgBg2x from 'images/Recipe/recipie-bgd-desc@2x.png';\n\nexport const RecipeBcg = styled.div`\n  width: 1440px;\n  height: 493px;\n  position: absolute;\n  top: 0%;\n  left: 5%;\n\n  width: 100%;\n  /* width: 1440px;\n  height: 455px; */\n  /* position: relative; */\n  /* background-position: center center; */\n  margin: 0 auto;\n  z-index: -5;\n  background-position: -220px -150px;\n\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-image: url(${imgBg1x});\n\n  @media screen and (min-width: 768px) {\n    /* .HeroBackground {\n      top: -68px;\n    } */\n  }\n\n  @media screen and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${imgBg2x});\n  }\n`;\n","import styled from 'styled-components';\n// import ClockIcon from 'images/Recipe/clock.png';\nimport backgroundDesktop from 'images/Recipe/recipie-bgd-desc@1x.png';\nimport backgroundMobile from 'images/Recipe/recipie-bgd-mob@1x.png';\nimport backgroundTablet from 'images/Recipe/recipie-bgd-tab@1x.png';\n\nexport const ImgBox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -2;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  background-position: center center;\n  width: 100%;\n  height: 455px;\n\n  background-image: url(${backgroundMobile});\n  @media screen and (min-width: 768px) {\n    height: 495px;\n    background-image: url(${backgroundTablet});\n  }\n  @media screen and (min-width: 1440px) {\n    height: 493px;\n    background-image: url(${backgroundDesktop});\n  }\n`;\n\nexport const MainPageTitle = styled.h1`\n  position: relative;\n  z-index: 3;\n\n  padding-top: 30px;\n  color: var(--primary-green);\n  text-align: center;\n  font-size: 24px;\n  line-height: 1;\n\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: 44px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 44px;\n  }\n`;\n\nexport const Text = styled.p`\n  position: relative;\n  z-index: 3;\n\n  width: 100%;\n  max-width: 656px;\n  margin: 0 auto;\n  margin-top: 18px;\n  color: var(--secondary-black);\n  font-size: 12px;\n  line-height: 1.33;\n  text-align: center;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-top: 24px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  z-index: 3;\n\n  min-width: 200px;\n  margin-top: 24px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 35px;\n  font-size: 10px;\n  line-height: 1.5;\n  display: block;\n  background-color: transparent;\n  padding: 0 18px;\n  border-radius: 24px 44px;\n  border: 1px solid #8baa36;\n\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    height: 59px;\n    font-size: 16px;\n    line-height: 1.5;\n    padding: 0 44px;\n  }\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  z-index: 3;\n\n  margin-top: 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n  }\n`;\n\n// export const ClockSvg = styled(ClockIcon)`\n//   width: 18px;\n//   height: 18px;\n//   @media screen and (min-width: 768px) {\n//     width: 24px;\n//     height: 24px;\n//   }\n// `;\nexport const Time = styled.span`\n  margin-left: 5px;\n   color: var(--secondary-black);\n  font-weight:  500;\n font-size: 14px;\n  line-height: 1.43\n  letter-spacing: -0.24px;\n\n`;\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst ButtonLoader = ({ color, width }) => {\n  return (\n    <RotatingLines\n      strokeColor={color}\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width={width}\n      visible={true}\n    />\n  );\n};\n\nexport default ButtonLoader;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFavoriteRecipes,\n  selectIsLoading,\n  selectRecipe,\n} from 'redux/userRecipes/userRecipesSelectors';\nimport {\n  MainPageTitle,\n  Text,\n  Button,\n  Box,\n  Time,\n} from './RecipeHeroTextAdd.styled';\nimport {\n  addRecipeToFavorite,\n  removeRecipeFromFavorite,\n} from 'redux/userRecipes/userResipesOperations';\nimport { useEffect, useState } from 'react';\nimport ButtonLoader from './ButtonLoader/ButtonLoader';\n\nconst RecipeHeroTextAdd = ({ title, description, time, id }) => {\n  const recipe = useSelector(selectRecipe); // eslint-disable-line\n\n  const userFavouritesRecipes = useSelector(selectFavoriteRecipes);\n  const [isFavorite, setIsFavorite] = useState();\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    setIsFavorite(userFavouritesRecipes.includes(id));\n  }, [userFavouritesRecipes, id]);\n\n  const handleFavoriteButton = id => {\n    if (isFavorite) {\n      dispatch(removeRecipeFromFavorite(id));\n    } else {\n      dispatch(addRecipeToFavorite(id));\n    }\n    setIsFavorite(!isFavorite);\n  };\n\n  return (\n    // <div>\n    //   <h1>{title}</h1>\n    //   <p>{description}</p>\n    //   <button>knopka</button>\n    // </div>\n    <>\n      <MainPageTitle>{title}</MainPageTitle>\n      <Text>{description}</Text>\n      <Button\n        disabled={isLoading}\n        whileHover={{\n          backgroundColor: '#8BAA36',\n          borderColor: '#8BAA36',\n        }}\n        onClick={() => handleFavoriteButton(id)}\n      >\n        {isLoading ? (\n          <ButtonLoader color=\"white\" width={25} />\n        ) : isFavorite ? (\n          'Remove to favorite recipes'\n        ) : (\n          'Add to favorite recipes'\n        )}\n      </Button>\n      <Box>\n        {/* <ClockSvg /> */}\n        <Time>{time} min</Time>\n      </Box>\n    </>\n  );\n};\n\nexport default RecipeHeroTextAdd;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin-top: 144px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 80px;\n  }\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItemHeader = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px 10px;\n  width: 100%;\n  height: 38px;\n  max-width: 1240px;\n\n  background-color: var(--primary-green);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 17px 40px;\n  }\n`;\n\nexport const ListHeaderText = styled.span`\n  color: var(--primary-white);\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.5;\n  :last-child {\n    margin-left: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-left: 78px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      margin-left: 142px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  letter-spacing: 0.03em;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14.5px 29px 14px 14px;\n\n  background: #ebf3d4;\n  border-radius: 8px;\n  :nth-of-type(2) {\n    margin-top: 24px;\n    @media screen and (min-width: 768px) {\n      margin-top: 32px;\n    }\n  }\n\n  margin-top: 16px;\n  border-bottom: 1px solid #e0e0e0;\n\n  @media screen and (min-width: 768px) {\n    padding: 33px 58px 33px 40px;\n    margin-top: 24px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  width: 57px;\n  height: 57px;\n\n  @media screen and (min-width: 768px) {\n    width: 112px;\n    height: 112px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-left: 10px;\n\n  font-size: 16px;\n  line-height: 24px;\n\n  font-size: 12px;\n  line-height: 1.2;\n  font-weight: 500;\n\n  color: var(--primary-gray);\n\n  @media screen and (min-width: 768px) {\n    margin-left: 16px;\n    font-size: 16px;\n  }\n`;\n\nexport const Measure = styled.span`\n  color: var(--primary-white);\n  padding: 4px 10px;\n\n  background-color: var(--primary-green);\n  border-radius: 4px;\n\n  font-size: 12px;\n  line-height: 1.2;\n  font-weight: 600;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  margin-left: 46px;\n\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    margin-left: 110px;\n  }\n`;\n","import styled from 'styled-components';\nimport CheckIcon from 'images/Recipe/pick-big.png';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n  margin-left: 28px;\n  cursor: pointer;\n\n  border: 2px solid rgba(126, 126, 126, 0.5);\n  border-radius: 4px;\n\n  @media screen and (min-width: 768px) {\n    width: 35px;\n    height: 35px;\n    margin-left: 78px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 35px;\n    height: 35px;\n    margin-left: 151px;\n  }\n`;\n\nexport const SvgCheck = styled(CheckIcon)`\n  width: 8.7px;\n  height: 8.7px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 17px;\n    height: 17px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n// import { deleteIngredient, updateShoppinList } from 'redux/shopping/operations';\nimport { SvgCheck, Box } from './CheckBox.styled';\nimport {\n  selectRecipe,\n  selectShoppingList,\n} from 'redux/userRecipes/userRecipesSelectors';\nimport { addUserShoppingList } from 'redux/userRecipes/userResipesOperations'; // eslint-disable-line\nconst { useState } = require('react');\n\nconst CustomCheckbox = ({ recipeId, ingredientId, measure, isChecked }) => {\n  const dispatch = useDispatch(); // eslint-disable-line\n  console.log(measure);\n  const [checked, setChecked] = useState(false); // eslint-disable-line\n  const shoppingList = useSelector(selectShoppingList);\n  const recipe = useSelector(selectRecipe); // eslint-disable-line\n  const recipesId = shoppingList // eslint-disable-line\n    .filter(item => item.id.toString() === ingredientId)\n    .flatMap(item => item.recipesId);\n\n  const handleChange = () => {\n    console.log(ingredientId);\n    const recipesId = shoppingList\n      .filter(item => item.id.toString() === ingredientId)\n      .flatMap(item => item.recipesId);\n    console.log(recipesId);\n    // const measure = shoppingList\n    //   .filter(item => item._id.toString() === ingredientId)\n    //   .flatMap(item => item.measure);\n\n    // const dada = shoppingList.filter(\n    //   item => item._id.toString() === ingredientId\n    // );\n    console.log(measure);\n    // console.log(ingredientId);\n    // console.log('dada', dada);\n\n    // console.log(obj);\n    // const arr = [];\n    // const reqObj = {};\n    // reqObj[ingredientId] = measure;\n    // arr.push(reqObj, recipeId);\n    // dispatch(addUserShoppingList(arr));\n    // console.log(request);\n    console.log(recipesId.includes(recipeId));\n  };\n  // if (!checked) {\n  //   dispatch(updateShoppinList({ recipeId, ingredientId }));\n  // } else {\n  //   dispatch(deleteIngredient(ingredientId));\n  // }\n  // setChecked(!checked);\n\n  return <Box onClick={handleChange}>{checked && <SvgCheck />}</Box>;\n};\n\nexport default CustomCheckbox;\n","import React from 'react';\nimport {\n  Box,\n  List,\n  ListItemHeader,\n  ListHeaderText,\n  ListItem,\n  Wrapper,\n  ButtonWrapper,\n  Measure,\n  Img,\n  Title,\n} from './RecipeInngredientsList.styled';\nimport { useSelector } from 'react-redux';\nimport CustomCheckbox from './CheckBox/CheckBox';\nimport { selectRecipe } from 'redux/userRecipes/userRecipesSelectors';\n\nconst RecipeInngredientsList = ({ ingredients, recipeId }) => {\n  const list = useSelector(selectRecipe); // eslint-disable-line\n\n  return (\n    <Box>\n      <List>\n        <ListItemHeader>\n          <ListHeaderText>Product</ListHeaderText>\n          <div>\n            <ListHeaderText>Number</ListHeaderText>\n            <ListHeaderText>Add to list</ListHeaderText>\n          </div>\n        </ListItemHeader>\n        {ingredients?.map(({ _id, ttl, desc, thb, measure }) => {\n          const isChecked = ingredients?.some(item => item._id === _id); // eslint-disable-line\n          if (!_id) {\n            return null;\n          }\n          return (\n            <ListItem key={_id}>\n              <Wrapper>\n                <Img alt={ttl} src={thb} width={48} height={48} />\n                <Title>{ttl}</Title>\n              </Wrapper>\n              <ButtonWrapper>\n                <Measure>{measure}</Measure>\n                <CustomCheckbox\n                  recipeId={recipeId}\n                  ingredientId={_id}\n                  measure={measure}\n                  // isChecked={isChecked}\n                />\n              </ButtonWrapper>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default RecipeInngredientsList;\n","import styled from 'styled-components';\n\nexport const MainBox = styled.div`\n  @media screen and (max-width: 1439.98px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 50px;\n\n  font-size: 24px;\n  line-height: 1;\n\n  letter-spacing: -0.24px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 96px;\n  }\n`;\n\nexport const Text = styled.p`\nmargin-left: 14px;\n  color: rgba(0, 0, 0, 0.8);\n font-size: 12px\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n  max-width: 558px;\n`;\n\nexport const Box = styled.div`\n  margin-top: 28px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n\n  :not(:first-child) {\n    margin-top: 14px;\n  }\n`;\n\nexport const SpanBox = styled.div`\n  color: white;\n  width: 21px;\n  height: 21px;\n  border-radius: 50%;\n  background: var(--primary-green);\n  display: \"flex\",\n    justify-Content: \"center\",\n    align-Items: \"center\",;\n`;\nexport const Span = styled.span`\n  padding: 8px;\n  font-weight: 600\n  font-size: 12px\n  line-height: 1.3;\n`;\n\nexport const Img = styled.img`\n  @media screen and (max-width: 1439.98px) {\n    margin-top: 40px;\n  }\n\n  width: 343px;\n  height: 250px;\n  @media screen and (min-width: 768px) {\n    width: 433px;\n    height: 332px;\n  }\n`;\n","import React from 'react';\nimport {\n  MainBox,\n  Title,\n  Box,\n  List,\n  Item,\n  SpanBox,\n  Span,\n  Text,\n  Img,\n} from './RecipePreparation.styled';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst RecipePreparation = ({ preview, title, instructions }) => {\n  const cleanedInstructions = instructions?.replace(/^\\d+\\)\\s*/gm, '');\n  const sentences = cleanedInstructions?.split(/(?:\\.|\\?|!)\\s/g);\n  const steps = sentences?.map(sentence =>\n    sentence.replace(/^\\d+\\)/, '').trim()\n  );\n\n  return (\n    <MainBox>\n      <Title>Recipe Preparation</Title>\n      <Box>\n        <List>\n          {steps?.map((el, idx) => (\n            <Item key={nanoid()}>\n              <SpanBox>\n                <Span>{idx + 1}</Span>\n              </SpanBox>\n              <Text>{el}</Text>\n            </Item>\n          ))}\n        </List>\n        <Img alt={title} src={preview} width={343} />\n      </Box>\n    </MainBox>\n  );\n};\n\nexport default RecipePreparation;\n","import React, { useEffect } from 'react';\nimport { RecipeBcg } from './RecipePageHero.styled';\nimport { createPortal } from 'react-dom';\nimport RecipeHeroTextAdd from './RecipeHeroTextAdd/RecipeHeroTextAdd';\nimport { useDispatch, useSelector } from 'react-redux';\n// import {\n//   selectIsLoading,\n//   selectRecipe,\n// } from 'redux/userRecipes/userRecipesSelectors';\n// import { getRecipeByIdAPI, getShoppingList } from 'service/API/dishesApi';\nimport RecipeInngredientsList from 'components/RecipeInngredientsList/RecipeInngredientsList';\nimport RecipePreparation from 'components/RecipePreparation/RecipePreparation';\nimport {\n  getRecipeById,\n  getUserShoppingList,\n} from 'redux/userRecipes/userResipesOperations';\nimport { useLocation } from 'react-router';\nimport { selectRecipe } from 'redux/userRecipes/userRecipesSelectors';\n\nconst mainRoot = document.querySelector('#racipe_bcg');\n\nconst RecipeBckg = () => {\n  return createPortal(<RecipeBcg></RecipeBcg>, mainRoot);\n};\n\nconst RecipePageHero = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const id = pathname.split('/')[2];\n  const recipe = useSelector(selectRecipe);\n  const ingredients = recipe.ingredients;\n\n  // const { title, description, time } = useSelector(selectRecipe);\n\n  useEffect(() => {\n    dispatch(getUserShoppingList());\n    dispatch(getRecipeById(id));\n  }, [dispatch, id]);\n\n  return (\n    <>\n      <RecipeBckg></RecipeBckg>\n      <RecipeHeroTextAdd\n        title={recipe.title}\n        description={recipe.description}\n        time={recipe.time}\n        id={recipe.id}\n      />\n      <RecipeInngredientsList ingredients={ingredients} recipeId={id} />\n      <RecipePreparation\n        preview={recipe.preview}\n        title={recipe.title}\n        instructions={recipe.instructions}\n      />\n    </>\n  );\n};\n\nexport default RecipePageHero;\n","import RecipePageHero from 'components/RecipePageHero/RecipePageHero';\nimport React from 'react';\n\nconst RecipePage = () => {\n  return (\n    <div>\n      <RecipePageHero />\n    </div>\n  );\n};\n\nexport default RecipePage;\n","export const selectFavoriteRecipes = state => state.userRecipes.favorite;\n\nexport const selectMyRecipes = state => state.userRecipes.myRecipes;\n\nexport const selectIsLoading = state => state.userRecipes.isLoading;\n\nexport const selectUserError = state => state.userRecipes.error;\n\nexport const selectShoppingList = state => state.userRecipes.shoppingList;\n\nexport const selectRecipe = state => state.userRecipes.recipeById;\n"],"names":["RecipeBcg","styled","_templateObject","_taggedTemplateLiteral","imgBg1x","imgBg2x","MainPageTitle","backgroundMobile","backgroundTablet","backgroundDesktop","_templateObject2","Text","_templateObject3","Button","_templateObject4","Box","_templateObject5","Time","_templateObject6","_ref","color","width","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","title","description","time","id","userFavouritesRecipes","useSelector","selectRecipe","selectFavoriteRecipes","_useState","useState","_useState2","_slicedToArray","isFavorite","setIsFavorite","dispatch","useDispatch","isLoading","selectIsLoading","useEffect","includes","_jsxs","_Fragment","children","disabled","whileHover","backgroundColor","borderColor","onClick","removeRecipeFromFavorite","addRecipeToFavorite","handleFavoriteButton","ButtonLoader","List","ListItemHeader","ListHeaderText","ListItem","Wrapper","Img","_templateObject7","Title","_templateObject8","Measure","_templateObject9","ButtonWrapper","_templateObject10","_templateObject11","SvgCheck","require","recipeId","ingredientId","measure","isChecked","console","log","checked","shoppingList","selectShoppingList","filter","item","toString","flatMap","recipesId","ingredients","map","_ref2","_id","ttl","thb","desc","some","alt","src","height","CustomCheckbox","MainBox","Item","SpanBox","Span","preview","instructions","cleanedInstructions","replace","sentences","split","steps","sentence","trim","el","idx","nanoid","mainRoot","document","querySelector","RecipeBckg","createPortal","useLocation","pathname","recipe","getUserShoppingList","getRecipeById","RecipeHeroTextAdd","RecipeInngredientsList","RecipePreparation","RecipePageHero","state","userRecipes","favorite","selectMyRecipes","myRecipes","selectUserError","error","recipeById"],"sourceRoot":""}